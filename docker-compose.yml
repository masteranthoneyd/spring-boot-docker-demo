version: "3.4"
services:
  docker-eureka1:
    image: ${IMAGE}
    env_file:
      - .env
    environment:
      - ACTIVE=docker1
      - PORT=${EUREKA1_PORT}
      - ADDITIONAL_EUREKA_SERVER_LIST=http://${SECURITY_NAME}:${SECURITY_PASSWORD}@docker-eureka2:${EUREKA2_PORT}/eureka/,http://${SECURITY_NAME}:${SECURITY_PASSWORD}@docker-eureka3:${EUREKA3_PORT}/eureka/
    ports:
      - ${EUREKA1_PORT}:${EUREKA1_PORT}
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
        window: 20s
      update_config:
        parallelism: 1
        delay: 20s
    networks:
      eureka-net:
        aliases:
          - eureka
    logging:
      options:
        max-size: "1m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-fs", "http://localhost:${EUREKA1_PORT}/health/"]
      interval: 1m30s
      timeout: 15s
      retries: 3

  docker-eureka2:
    image: ${IMAGE}
    env_file:
      - .env
    environment:
      - ACTIVE=docker2
      - PORT=${EUREKA2_PORT}
      - ADDITIONAL_EUREKA_SERVER_LIST=http://${SECURITY_NAME}:${SECURITY_PASSWORD}@docker-eureka1:${EUREKA1_PORT}/eureka/,http://${SECURITY_NAME}:${SECURITY_PASSWORD}@docker-eureka3:${EUREKA3_PORT}/eureka/
    ports:
      - ${EUREKA2_PORT}:${EUREKA2_PORT}
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
        window: 20s
      update_config:
        parallelism: 1
        delay: 20s
    networks:
      eureka-net:
        aliases:
          - eureka
    logging:
      options:
        max-size: "1m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-fs", "http://localhost:${EUREKA2_PORT}/health/"]
      interval: 1m30s
      timeout: 15s
      retries: 3

  docker-eureka3:
    image: ${IMAGE}
    env_file:
      - .env
    environment:
      - ACTIVE=docker3
      - PORT=${EUREKA3_PORT}
      - ADDITIONAL_EUREKA_SERVER_LIST=http://${SECURITY_NAME}:${SECURITY_PASSWORD}@docker-eureka2:${EUREKA2_PORT}/eureka/,http://${SECURITY_NAME}:${SECURITY_PASSWORD}@docker-eureka1:${EUREKA1_PORT}/eureka/
    ports:
      - ${EUREKA3_PORT}:${EUREKA3_PORT}
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
        window: 20s
      update_config:
        parallelism: 1
        delay: 20s
    networks:
      eureka-net:
        aliases:
          - eureka
    logging:
      options:
        max-size: "1m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-fs", "http://localhost:${EUREKA3_PORT}/health/"]
      interval: 1m30s
      timeout: 15s
      retries: 3

# docker network create --opt encrypted -d=overlay --attachable --subnet 10.10.0.0/16 name
networks:
  eureka-net:
    external:
      name: ${BACKEND_NETWORK:-backend}


